apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'inera-intyg'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'net.ltgt.apt'

def webappOutputDir = 'build/apps/'

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://build-inera.nordicmedtest.se/nexus/repository/releases/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'se.inera.intyg:gradle-intyg-plugin:1.0.+'
        classpath 'com.moowork.gradle:gradle-node-plugin:1.1.1'
        classpath 'org.akhikhl.gretty:gretty:1.4.1'
        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.10'
    }
}

repositories {
    mavenLocal()
    maven { url "https://build-inera.nordicmedtest.se/nexus/repository/releases/" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

group = 'se.inera.intyg.logsender'
version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

task createVersionPropertyFile(type: VersionPropertyFileTask)

uploadArchives.repositories.mavenDeployer {
    repository(url: "https://build-inera.nordicmedtest.se/nexus/repository/releases/") {
        authentication(userName: System.properties['nexusUsername'], password: System.properties['nexusPassword'])
    }
}

ext {
    commonVersion = System.properties['commonVersion'] ?: '0-SNAPSHOT'
    infraVersion = System.properties['infraVersion'] ?: '0-SNAPSHOT'

    commonsIoVersion = "2.4"
    funktionstjansterGrpSchemasVersion = "1.0.3"
    insurancemedicinedecisionsupportSchemasVersion = "1.0.1"
    intygClinicalprocessSchemasVersion = "1.0.7-beta3"
    intygInsuranceprocessSchemasVersion = "1.0.4"
    intygTransportstyrelsenSchemasVersion = "1.0.4"
    ppSchemasVersion = "1.0.4"
    ppTermsSchemasVersion = "1.0.4"
    rivtaClinicalprocessSchemasVersion = "3.1.0-RC1.1"
    rivtaInsuranceprocessSchemasVersion = "3.1.0.4"
    rivtaItintegrationMonitoringSchemasVersion = "1.0.0.3"
    rivtaItintegrationSchemasVersion = "1.0.0.4"
    rivtaResidentMasterSchemasVersion = "1.1.3.5"

    activeMqVersion = "5.13.4"
    assertjVersion = "3.6.2"
    aspectJWeaverVersion = "1.7.1"
    autovalueVersion = "1.1"
    awaitilityVersion = "1.4.0"
    camelVersion = "2.16.0"
    dbUnitVersion = "2.4.9"
    fitnesseVersion = "20150814"
    gebCoreVersion = "0.10.0"
    geronimoJmsVersion = "1.1.1"
    groovyVersion = "2.4.7"
    hamcrestVersion = "1.3"
    httpBuilderVersion = "0.7.1"
    jadiraUserTypeVersion = "5.0.0.GA"
    javaxMailVersion = "1.4"
    javaxWsRsApiVersion = "2.0.1"
    jaxrsVersion = "1.5.4"
    jmsApiVersion = "1.1-rev-1"
    jsonAssertVersion = "1.2.0"
    jsonSchemaValidatorVersion = "2.8.0"
    liquibaseVersion = "3.3.5"
    luceneAnalyzersCommonVersion = "4.10.2"
    openWsVersion = "1.4.2-1"
    opensamlVersion = "2.5.3"
    restassuredVersion = "2.8.0"
    seleniumServerVersion = "2.52.0"
    seleniumVersion = "2.52.0"
    servletApiVersion = "2.5"
    springDataVersion = "1.9.0.RELEASE"
    springSecurityVersion = "4.0.3.RELEASE"
    springVersion = "4.2.2.RELEASE"
    stAntlr4Version = "4.0.8"
    xmlToolingVersion = "1.3.2"
    xmlUnitVersion = "1.4"

    mockitoVersion = "1.9.0"
    springockitoVersion = "1.0.8"
    mysqlVersion = "5.1.40"
    h2Version = "1.3.176"
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

gretty {
    integrationTestTask = null
    contextPath = '/logsender'
    httpPort = 9099
    scanInterval = 0
    contextConfigFile = file("src/main/webapp/WEB-INF/jetty-web.xml")

    jvmArgs = [
            "-Dcatalina.base=${buildDir}/catalina.base",
            "-Dspring.profiles.active=dev",
            "-Dcredentials.file=${projectDir}/log-sender-dummy-credentials.properties",
            "-Dlogsender.config.file=${projectDir}/log-sender-dev.properties",
            "-Dlogsender.logback.file=${projectDir}/log-sender-logback.xml",
            "-Djava.awt.headless=true"
    ]

    extraResourceBase webappOutputDir
}

test {
    exclude '**/*IT*'
}

task camelTest(type: Test) {
    outputs.upToDateWhen { false }
    include '**/*IT*'
}



task tagRelease(type: TagReleaseTask)

task testReport(type: SharedTestReportTask)

dependencies {

    compile "com.google.code.findbugs:jsr305:3.0.0"

    testCompile 'junit:junit:4.+'
    testCompile "org.mockito:mockito-core:1.9.0"

    compile "se.inera.intyg.infra:log-messages:${infraVersion}"
    compile "se.inera.intyg.infra:loggtjanst-stub:${infraVersion}"
    compile "se.inera.intyg.common:logging-util:${commonVersion}"
    compile "se.inera.intyg.common:integration-util:${commonVersion}"

    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework:spring-jms:${springVersion}"
    compile "org.apache.camel:camel-spring:${camelVersion}"
    compile "org.apache.activemq:activemq-camel:${activeMqVersion}"
    compile "javax.ws.rs:javax.ws.rs-api:${javaxWsRsApiVersion}"

    compileOnly "javax.servlet:servlet-api:${servletApiVersion}"
    compileOnly "org.apache.geronimo.specs:geronimo-jms_1.1_spec:${geronimoJmsVersion}"

    testCompile "org.kubek2k:springockito:${springockitoVersion}"
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile "xmlunit:xmlunit:${xmlUnitVersion}"
    testCompile "com.jayway.awaitility:awaitility:${awaitilityVersion}"
    testCompile "org.apache.camel:camel-test-spring:${camelVersion}"
    testCompile "org.apache.activemq:activemq-spring:${activeMqVersion}"
    testCompile "org.apache.activemq:activemq-broker:${activeMqVersion}"

    gretty "org.apache.activemq:activemq-client:${activeMqVersion}"
    gretty "org.apache.activemq:activemq-broker:${activeMqVersion}"
    gretty "com.h2database:h2:${h2Version}"
    gretty "mysql:mysql-connector-java:${mysqlVersion}"
}
