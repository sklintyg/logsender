//import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'maven'
    id 'idea'
    id 'war'
    id "se.inera.intyg.plugin.common" version "2.0.11"
    //id "org.gretty" version "2.3.1"
    id "org.gretty" version "3.0.1"
    id 'org.springframework.boot' version '2.2.4.RELEASE' apply false
    //id "io.spring.dependency-management" version "1.0.9.RELEASE"
}

ext {
    commonVersion = System.properties['commonVersion'] ?: '0-SNAPSHOT'
    infraVersion = System.properties['infraVersion'] ?: '0-SNAPSHOT'

    rivtaStoreLogSchemasVersion = "2.0.1"

    activeMqVersion = "5.13.4"
    apacheCXFVersion = "3.3.5"
    awaitilityVersion = "1.4.0"
    camelVersion = "3.0.1"
    //camelVersion = "2.24.1"
    //camelVersion = "2.16.0"
    commonsIoVersion = "2.4"
    geronimoJmsVersion = "1.1.1"
    javaxJmsApiVersion = "2.0.1"
    javaxWsRsApiVersion = "2.0.1"
    servletApiVersion = "2.5"
    //servletApiVersion = "3.1"
    springVersion = "4.3.16.RELEASE"
    xmlUnitVersion = "1.4"

    mockitoVersion = "1.9.0"
    springockitoVersion = "1.0.8"
    mysqlVersion = "5.1.40"
    h2Version = "1.3.176"

}

group = 'se.inera.intyg.logsender'
version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

task createVersionPropertyFile(type: VersionPropertyFileTask)

uploadArchives.repositories.mavenDeployer {
    repository(url: "https://build-inera.nordicmedtest.se/nexus/repository/releases/") {
        authentication(userName: System.properties['nexusUsername'], password: System.properties['nexusPassword'])
    }
}

gretty {
    //servletContainer = 'jetty9'
    servletContainer = 'tomcat9'
    contextPath = '/logsender'
    //contextConfigFile = file("src/main/webapp/WEB-INF/jetty-web.xml")

    integrationTestTask = null
    scanInterval = 0
    httpPort = 9099
    debugPort = 5009
    debugSuspend = false

    jvmArgs = [
            "-Dcatalina.base=${buildDir}/catalina.base",
            "-Dspring.profiles.active=dev,wc-loggtjanst-stub,testability-api,caching-enabled",
            "-Dcredentials.file=${projectDir}/log-sender-dummy-credentials.properties",
            "-Dconfig.file=${projectDir}/log-sender-dev.properties",
            "-Dlogback.file=classpath:logback-ocp.xml",
            "-Djava.awt.headless=true"
    ]

    extraResourceBase 'build/apps/'
}

test {
    useJUnitPlatform()
    exclude '**/*IT*'

    jvmArgs = [
            "-Dcatalina.base=${buildDir}/catalina.base",
            "-Dspring.profiles.active=dev,wc-loggtjanst-stub,testability-api",
            "-Dcredentials.file=${projectDir}/log-sender-dummy-credentials.properties",
            "-Dconfig.file=${projectDir}/log-sender-dev.properties",
            "-Dlogback.file=classpath:logback-ocp.xml",
            "-Djava.awt.headless=true"
    ]
}

tasks.withType(War) {
    destinationDirectory = file("$rootDir/web/build/libs")
}

task camelTest(type: Test) {
    outputs.upToDateWhen { false }
    include '**/*IT*'
}

task tagRelease(type: TagReleaseTask)

war.dependsOn createVersionPropertyFile

apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    //compile 'org.springframework:spring-framework-bom:5.2.3.RELEASE'
    //compile 'org.springframework.boot:spring-boot-dependencies:2.2.4.RELEASE'
    //implementation platform('org.springframework.boot:spring-boot-dependencies:2.2.4.RELEASE')
    //compile group: 'org.apache.camel', name: 'camel-bom', version: '3.0.1', ext: 'pom'

    compile "se.riv.informationsecurity.auditing.log:informationsecurity-auditing-log-schemas:${rivtaStoreLogSchemasVersion}"

    compile "se.inera.intyg.infra:log-messages:${infraVersion}"
    compile "se.inera.intyg.infra:loggtjanst-stub:${infraVersion}"
    compile "se.inera.intyg.infra:monitoring:${infraVersion}"
    compile "se.inera.intyg.common:logging-util:${commonVersion}"
    compile "se.inera.intyg.common:integration-util:${commonVersion}"

    compile "org.springframework:spring-jms"
    compile "org.springframework:spring-web"
    compile "org.springframework:spring-webmvc"

    compile "org.apache.activemq:activemq-spring"

    compile "org.apache.camel:camel-spring:${camelVersion}"
    compile "org.apache.camel:camel-spring-javaconfig:${camelVersion}"



    compile "org.apache.cxf:cxf-rt-wsdl"
    //compile "org.apache.cxf:cxf-rt-transports-http"
    compile "org.apache.cxf:cxf-rt-features-logging:${apacheCXFVersion}"
    compile "org.apache.activemq:activemq-camel"

    compile "javax.ws.rs:javax.ws.rs-api"
    compile "javax.jms:javax.jms-api"

    //compileOnly "javax.servlet:javax.servlet-api"
    //compileOnly "org.apache.geronimo.specs:geronimo-jms_1.1_spec"

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    //testCompile 'org.junit.jupiter:junit-jupiter-params'
    testCompile "org.mockito:mockito-junit-jupiter"
    //testCompile "org.mockito:mockito-junit-jupiter"
    //testCompile "org.kubek2k:springockito:${springockitoVersion}"
    testCompile "org.springframework:spring-test"
    //testCompile "xmlunit:xmlunit:${xmlUnitVersion}" // old version
    testCompile "org.xmlunit:xmlunit-core" // Appears not tobe needed in logsender
    //testCompile "com.jayway.awaitility:awaitility:${awaitilityVersion}"
    testCompile "org.awaitility:awaitility"
    //testCompile "org.apache.camel:camel-test-spring:${camelVersion}"
    testCompile "org.apache.camel:camel-test-spring-junit5:${camelVersion}"
    testCompile "org.apache.activemq:activemq-broker"
    //testCompile "org.apache.commons:commons-lang3"


    gretty "org.apache.activemq:activemq-client"
    gretty "org.apache.activemq:activemq-broker"
    gretty "com.h2database:h2"
    gretty "mysql:mysql-connector-java"

}

/*
dependencies {
    compile "se.riv.informationsecurity.auditing.log:informationsecurity-auditing-log-schemas:${rivtaStoreLogSchemasVersion}"

    compile "se.inera.intyg.infra:log-messages:${infraVersion}"
    compile "se.inera.intyg.infra:loggtjanst-stub:${infraVersion}"
    compile "se.inera.intyg.infra:monitoring:${infraVersion}"
    compile "se.inera.intyg.common:logging-util:${commonVersion}"
    compile "se.inera.intyg.common:integration-util:${commonVersion}"

    compile "org.springframework:spring-jms:${springVersion}"
    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"

    compile "org.apache.activemq:activemq-spring:${activeMqVersion}"
    compile "org.apache.camel:camel-spring:${camelVersion}"
    compile "org.apache.activemq:activemq-camel:${activeMqVersion}"

    compile "org.apache.camel:camel-spring-javaconfig:${camelVersion}"


    compile "javax.ws.rs:javax.ws.rs-api:${javaxWsRsApiVersion}"
    compile "javax.jms:javax.jms-api:${javaxJmsApiVersion}"

    //compileOnly "javax.servlet:servlet-api:${servletApiVersion}"
    compileOnly "org.apache.geronimo.specs:geronimo-jms_1.1_spec:${geronimoJmsVersion}"


    testCompile 'junit:junit:4.+'
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.kubek2k:springockito:${springockitoVersion}"
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile "xmlunit:xmlunit:${xmlUnitVersion}"
    testCompile "com.jayway.awaitility:awaitility:${awaitilityVersion}"
    testCompile "org.apache.camel:camel-test-spring:${camelVersion}"
    testCompile "org.apache.activemq:activemq-broker:${activeMqVersion}"

    gretty "org.apache.activemq:activemq-client:${activeMqVersion}"
    gretty "org.apache.activemq:activemq-broker:${activeMqVersion}"
    gretty "com.h2database:h2:${h2Version}"
    gretty "mysql:mysql-connector-java:${mysqlVersion}"
}*/

repositories {
    mavenLocal()
    maven { url "https://build-inera.nordicmedtest.se/nexus/repository/public/" }
    jcenter {
        content {
            // this repository contains everything BUT artifacts with group starting with "se.inera"
            excludeGroupByRegex "se\\.inera.*"
        }
    }
}
