//import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'maven'
    id 'idea'
    id 'war'
    id "se.inera.intyg.plugin.common" version "2.0.11"
    id "org.gretty" version "3.0.1"
    //id 'org.springframework.boot' version '2.2.4.RELEASE' apply false
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
}

ext {
    commonVersion = System.properties['commonVersion'] ?: '3.13.1-SNAPSHOT'
    infraVersion = System.properties['infraVersion'] ?: '3.13.1-SNAPSHOT'

    rivtaStoreLogSchemasVersion = "2.0.1"

    apacheCXFVersion = "3.2.4"
    jaxwsriVersion = "2.3.2"
}

group = 'se.inera.intyg.logsender'
version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

task createVersionPropertyFile(type: VersionPropertyFileTask)

uploadArchives.repositories.mavenDeployer {
    repository(url: "https://build-inera.nordicmedtest.se/nexus/repository/releases/") {
        authentication(userName: System.properties['nexusUsername'], password: System.properties['nexusPassword'])
    }
}

gretty {
    servletContainer = 'tomcat9'
    contextPath = '/logsender'

    integrationTestTask = null
    scanInterval = 0
    httpPort = 9099
    debugPort = 5009
    debugSuspend = false

    jvmArgs = [
            "-Dcatalina.base=${buildDir}/catalina.base",
            "-Dspring.profiles.active=dev,wc-loggtjanst-stub,testability-api,caching-enabled",
            "-Dcredentials.file=${projectDir}/log-sender-dummy-credentials.properties",
            "-Dconfig.file=${projectDir}/log-sender-dev.properties",
            "-Dlogback.file=classpath:logback-ocp.xml",
            "-Djava.awt.headless=true"
    ]

    extraResourceBase 'build/apps/'
}

test {
    useJUnitPlatform()
    exclude '**/*IT*'

    jvmArgs = [
            "-Dcatalina.base=${buildDir}/catalina.base",
            "-Dspring.profiles.active=dev,wc-loggtjanst-stub,testability-api,caching-enabled",
            "-Dcredentials.file=${projectDir}/log-sender-dummy-credentials.properties",
            "-Dconfig.file=${projectDir}/log-sender-dev.properties",
            "-Dlogback.file=classpath:logback-ocp.xml",
            "-Djava.awt.headless=true"
    ]
}

tasks.withType(War) {
    destinationDirectory = file("$rootDir/web/build/libs")
}

task camelTest(type: Test) {
    outputs.upToDateWhen { false }
    include '**/*IT*'
}

task tagRelease(type: TagReleaseTask)

war.dependsOn createVersionPropertyFile

apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        //mavenBom 'org.wildfly:wildfly-jaxws-client-bom:+'
        mavenBom 'org.springframework.boot:spring-boot-dependencies:2.2.5.RELEASE'
        //mavenBom 'org.springframework:spring-framework-bom:+'
        mavenBom 'org.apache.camel:camel-bom:3.0.1'
        //mavenBom 'com.sun.xml.ws:jaxws-ri-bom:+'
    }
}

dependencies {
    compile "se.riv.informationsecurity.auditing.log:informationsecurity-auditing-log-schemas:${rivtaStoreLogSchemasVersion}"

    compile "se.inera.intyg.infra:log-messages:${infraVersion}"
    compile "se.inera.intyg.infra:loggtjanst-stub:${infraVersion}"
    compile "se.inera.intyg.infra:monitoring:${infraVersion}"
    compile "se.inera.intyg.common:logging-util:${commonVersion}"
    compile "se.inera.intyg.common:integration-util:${commonVersion}"

    compile "org.springframework:spring-jms"
    compile "org.springframework:spring-web"
    compile "org.springframework:spring-webmvc"

    compile "org.apache.activemq:activemq-spring"
    compile "org.apache.camel:camel-activemq"
    compile "org.apache.camel:camel-spring"
    compile "org.apache.camel:camel-spring-javaconfig"
    compile 'org.apache.camel:camel-direct'

    //compile "org.apache.cxf:cxf-rt-core:${apacheCXFVersion}"
    //compile "org.glassfish.jaxb:jaxb-runtime:${jaxwsriVersion}"
    compile "org.glassfish.jaxb:jaxb-runtime:2.3.1"

    //compile "javax.xml.bind:jaxb-api:${jaxwsriVersion}"
    compile "org.apache.cxf:cxf-rt-frontend-jaxws:${apacheCXFVersion}"
    compile "org.apache.cxf:cxf-rt-transports-http:${apacheCXFVersion}"
    compile "org.apache.cxf:cxf-rt-features-logging:${apacheCXFVersion}"
    compile "javax.ws.rs:javax.ws.rs-api"
    compile "javax.jms:javax.jms-api"

    compile "com.sun.xml.ws:jaxws-ri:${jaxwsriVersion}"
    compile "com.sun.activation:jakarta.activation"

    //compile "javax.ws.rs:javax.ws.rs-api:2.1.1"

    compileOnly "org.apache.geronimo.specs:geronimo-jms_1.1_spec"

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testCompile "org.mockito:mockito-junit-jupiter"
    testCompile "org.springframework:spring-test"
    testCompile "org.xmlunit:xmlunit-core"
    testCompile "org.awaitility:awaitility"
    testCompile "org.apache.camel:camel-test-spring-junit5"
    testCompile "org.apache.activemq:activemq-broker"
    testCompile "org.apache.activemq:activemq-kahadb-store"

    gretty "org.apache.activemq:activemq-client"
    gretty "org.apache.activemq:activemq-broker"
    gretty "com.h2database:h2"
    gretty "mysql:mysql-connector-java"
}

repositories {
    mavenLocal()
    maven { url "https://build-inera.nordicmedtest.se/nexus/repository/public/" }
    jcenter {
        content {
            // this repository contains everything BUT artifacts with group starting with "se.inera"
            excludeGroupByRegex "se\\.inera.*"
        }
    }
}
